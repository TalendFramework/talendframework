package routines;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class QualityHelper {

	public static Boolean isThresholdMet(int value, int target, java.math.BigDecimal percentageThreshold) {
		if(percentageThreshold == null || percentageThreshold.compareTo(new java.math.BigDecimal(0)) < 1) return true;
		else {
			java.math.BigDecimal percentageReached = new java.math.BigDecimal(value).divide(new java.math.BigDecimal(target)).multiply(new java.math.BigDecimal(100));
			//System.err.println("percentageReached: " + percentageReached + " percentageThreshold: " + percentageThreshold);
		
			if(percentageReached.compareTo(percentageThreshold) < 0) return false;
			else return true;
		}
	}
}
